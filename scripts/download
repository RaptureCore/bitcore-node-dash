#!/bin/bash

set -e

root_dir="${HOME}/.bitcore"
platform=`uname -a | awk '{print tolower($1)}'`
arch=`uname -m`
version="1.1.2"
tag="v1.1.2.2"
url="https://github.com/RaptureCore/Rapture/releases/download/${tag}/"

if [ "${platform}" == "linux" ]; then
    if [ "${arch}" == "x86_64" ]; then
        tarball_name="rapturecore-${version}-linux64.tar.gz"
    elif [ "${arch}" == "x86_32" ]; then
        tarball_name="rapturecore-${version}-linux32.tar.gz"
    fi
elif [ "${platform}" == "darwin" ]; then
    tarball_name="rapturecore-${version}-osx64.tar.gz"
else
    echo "RAPTURE binary distribution not available for this platform or architecture"
    exit -1
fi

binary_url="${url}/${tarball_name}"

download_raptured() {

    mkdir -p "${root_dir}"
    mkdir -p "${root_dir}/data"

    cd "${root_dir}/data"

    echo "Downloading RAPTURE: ${binary_url}"

    is_curl=true
    if hash curl 2>/dev/null; then
        curl --fail -I $binary_url >/dev/null 2>&1
    else
        is_curl=false
        wget --server-response --spider $binary_url >/dev/null 2>&1
    fi

    if test $? -eq 0; then
        if [ "${is_curl}" = true ]; then
            curl -L $binary_url > $tarball_name
        else
            wget $binary_url
        fi
        if test -e "${tarball_name}"; then
            echo "Unpacking RAPTURE distribution"
            tar -xvzf $tarball_name
            if test $? -eq 0; then
                ln -sf "rapturecore-${version}/bin/raptured"
                return;
            fi
        fi
    fi
    echo "RAPTURE binary distribution could not be downloaded"
    exit -1
}

download=1

if [ "${SKIP_RAPTURE_DOWNLOAD}" = 1 ]; then
    download=0;
fi

while [ -n "$1" ]; do
  param="$1"
  value="$2"

  case $param in
    --skip-rapture-download)
          download=0
          ;;
  esac
  shift
done

if [ "${download}" = 1 ]; then
    download_raptured
fi

exit 0
